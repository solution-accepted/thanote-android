language: android
jdk: openjdk8 # oraclejdk8
os: linux
dist: trusty
env:
  global:
    - ANDROID_TARGET=android-29
    - ANDROID_API=29
    - ANDROID_ABI=x86
    # armeabi-v7a
    # arm64-v8a
    # x86
    # x86_64
android:
  components:
    # Uncomment the lines below if you want to
    # use the latest revision of Android SDK Tools
    - tools
    - platform-tools

    # The BuildTools version used by your project
    - build-tools-29.0.3

    # The SDK version used to compile your project
    # - android-29
    - $ANDROID_TARGET

    # Additional components
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    # - sys-img-x86-android-29
    # - sys-img-armeabi-v7a-android-29
    - sys-img-${ANDROID_ABI}-${ANDROID_TARGET}
  licenses:
    - android-sdk-preview-license-.+
    - android-sdk-license-.+
    - google-gdk-license-.+
# Emulator Management: Create, Start and Wait
# before_script:
#   - echo no | android create avd --force -n test -t ${ANDROID_TARGET} --abi ${ANDROID_ABI} -c 100M
#   - emulator -avd test -no-audio -no-window &
#   - android-wait-for-emulator
#   - adb shell input keyevent 82 &
# Valid ABIs: no ABIs.
# Error: Invalid --abi arm64-v8a for the selected target.

script: "./gradlew build"
# If your project has build.gradle file in the repository root, Gradle will be used to build it. By default it will use
# gradle build connectedCheck

# to run your test suite. If your project also includes the gradlew wrapper script in the repository root, Travis Android builder will try to use it instead. The default command will become:
# ./gradlew build connectedCheck
